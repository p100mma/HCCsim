% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HCR.R
\name{extract_subclustering}
\alias{extract_subclustering}
\title{Extract subclustering from hclustering_list}
\usage{
extract_subclustering(cluster_tuple, hclustering_list, up_to = NULL)
}
\arguments{
\item{cluster_tuple}{ID of the biggest cluster to extract from the hierarchy (in which all others will be contained)}

\item{hclustering_list}{A list encoding cluster membership, such as one produced by \code{subclusterNreconstruct} or \code{subdivide_cluster} or an instance of \code{HCCSim_clustering_list}.}

\item{up_to}{Specification of number of layers of subclusters to extract that are contained in \code{cluster_tuple}. If \code{NULL}, then all subclusters nested within \code{cluster_tuple} cluster are extracted as separate elements of resulting list. If it exceeds number of sublayers in \code{cluster_tuple}, error is raised. If it is 0, then \code{hclustering_list[[cluster_tuple]]} is returned.}
}
\value{
A sublist of \code{hclustering_list} containing cluster \code{cluster_tuple} and subclusters according to \code{up_to}.
}
\description{
Extract subclustering from hclustering_list
}
\examples{
base_cl<- HCCSim_clustering_list(list( `1`= c(5,6,7,8), `2`= c(9,4,3), `3`=c(1,2,10,11) ),
				    domain_size= 15,   #4 clusterless nodes implied
				    params=list(base_param=1) )
subdivision1= HCCSim_clustering_list(list(c(6,8), c(7,5) ), params=list(sub1_param=2))
subdivision2= HCCSim_clustering_list(list(c(1,10), c(2,11) ), params=list(sub2_param=3))
subdivide_cluster( base_cl, "1", subdivision1)-> hcl
subdivide_cluster( hcl, "3", subdivision2)-> hcl
subdivide_cluster( hcl, "3,1", HCCSim_clustering_list( list(c(1),c(10)), params=list(p31=3 )))-> hcl
print(hcl)
extract_subclustering("3",hcl,0)
extract_subclustering("3",hcl,1)
extract_subclustering("3",hcl,2)
extract_subclustering("3",hcl,999)
extract_subclustering("3",hcl)
}
\seealso{
\code{\link[=HCCSim_hclustering_list]{HCCSim_hclustering_list()}}, \code{\link[=get_max_lvl]{get_max_lvl()}}, \code{\link[=subdivide_cluster]{subdivide_cluster()}}
}
